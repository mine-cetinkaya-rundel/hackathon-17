---
title: "tidying `df` summarizing and mutating with group_by"
subtitle: Detailed Rubric
---

-   Part (a) - Narrative states the pipeline calculates the mean value of `var_1` for each level combination (or unique combination) of `var_2` and `var_3`.

    -   Note: Stating that there are 4 unique combinations of `var_2` and `var_3` is optional.

-   Part (a) - Narrative states the message indicates the result of the pipeline is grouped by `var_2`.

-   Part (b) - Narrative states the pipeline calculates the mean value of `var_1` for each level combination (or unique combination) of `var_2` and `var_3`.

    -   Note: Stating that there are 4 unique combinations of `var_2` and `var_3` is optional.

-   Part (b) - Narrative states `.groups = "drop"` removes the grouping attribute from the result of the pipeline.

    -   Note:
        -   The term "attribute" is optional.
        -   Explicitly mentioning that there is no longer a message printed is optional.

-   Part (c) - Narrative states that both pipelines calculate the mean value of `var_1` for each level combination (or unique combination) of `var_2` and `var_3`.

-   Part (c) - Narrative mentions the results of the two pipelines have different numbers of rows.

-   Part (c) - Narrative further states the first pipeline with `summarize()` results in four rows, which is equal to the unique combinations of `var_2` and `var_3`, while the second pipeline with `mutate()` has five, which is equal to number of rows of the input data frame, `df`.

-   Part (c) - Narrative mentions that the results have different numbers of columns.

-   Part (c) - Narrative further states the first pipeline with `summarize()` results in three columns (grouping variables and the newly calculated `mean_var_1`), while the second pipeline with `mutate()` has four, which is equal to number of columns of the input data frame, `df`.

    -   Note: Listing the names of the columns of the pipelines is optional.

-   Code output is shown for all parts.

-   Code style and readability: Line breaks after each |>, proper indentation, spaces around = signs if they are present, and spaces after commas if they are present.